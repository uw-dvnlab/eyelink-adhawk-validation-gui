function handles = plotData(handles)
% Plot Data
contents = cellstr(get(handles.menu_plot,'String'));
plot_type = contents{get(handles.menu_plot,'Value')};
if strcmp(plot_type, 'Position')
    plotPositionTrials(handles);
else
    plotVelocityTrials(handles);
end
% Update GUI
set(handles.txt_trial, 'String', num2str(handles.trialNo));
set(handles.txt_tot_trial, 'String', ['/ ' num2str(length(handles.trial_data))]);
set(handles.et_win_lo, 'String', num2str(handles.trial_data(handles.trialNo).verg_win(1)));
set(handles.et_win_hi, 'String', num2str(handles.trial_data(handles.trialNo).verg_win(2)));
set(handles.btn_next,'enable','on');
set(handles.btn_last,'enable','on');
% Update Button Labels
nSac_EL = length(handles.trial_data(handles.trialNo).saccades_primary_EL);
nSacM_EL = length(handles.trial_data(handles.trialNo).saccades_marked_EL);
nSac_AH = length(handles.trial_data(handles.trialNo).saccades_primary_AH);
nSacM_AH = length(handles.trial_data(handles.trialNo).saccades_marked_AH);
set(handles.btn_save_sac, 'String', [...
    'EL: [' ...
    num2str(nSac_EL) ' : ' ...
    num2str(nSacM_EL) ...
    '] AH: [' ...
    num2str(nSac_AH) ' : ' ...
    num2str(nSacM_AH) ...
    ']']);

[muR, muL, stdR, stdL, ~, ~, handles] = computeFixationSTD(handles);
set(handles.txt_fixation, 'String', ...
    ['Right:' newline ...
    'x: ' num2str(muR(1)) ' (mean), ' num2str(stdR(1)) ' (std)' newline ...
    'y: ' num2str(muR(2)) ' (mean), ' num2str(stdR(2)) ' (std)' newline ...
    newline ...
    'Left:' newline ...
    'x: ' num2str(muL(1)) ' (mean), ' num2str(stdL(1)) ' (std)' newline ...
    'y: ' num2str(muL(2)) ' (mean), ' num2str(stdL(2)) ' (std)'
    ]);